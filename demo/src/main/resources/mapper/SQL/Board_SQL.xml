<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.example.demo.mapper.BoardMapper">
    <select id="getAllBoard" resultType="hashmap">
        <![CDATA[
          SELECT
              id, title, contents, created_time, member_rev, LENGTH(member_rev)-LENGTH(REPLACE(member_rev, ',', ''))+1 AS count_member_rev, member_no
          FROM
              board
          WHERE
              member_no = #{username}
          ORDER BY id DESC
        ]]>
    </select>

    <select id="getAllBoard2" resultType="hashmap">
        <![CDATA[
          SELECT
              id, title, contents, created_time, member_rev, LENGTH(member_rev)-LENGTH(REPLACE(member_rev, ',', ''))+1 AS count_member_rev, member_no
          FROM
              board
          WHERE
              member_no = #{email}
          ORDER BY id DESC
        ]]>
    </select>

    <select id="login" resultType="hashmap">
        <![CDATA[
          SELECT
              id, mail
          FROM
              user_info
          WHERE
              id = #{id}
        ]]>
    </select>

<!--    <insert id="createBoard" parameterType="com.example.demo.model.Board">
        <![CDATA[
          INSERT INTO board
          (
              type,
              title,
              contents,
              created_time,
              member_no,
              member_rev
          )
          VALUES
          (
              #{type},
              #{title},
              #{contents},
              NOW(),
              #{member_no},
              #{member_rev}
          )
        ]]>
    </insert>-->
    <select id="getAllGroups" resultType="com.example.demo.model.Group">
        <![CDATA[
            SELECT
              group_code, group_title
            FROM
              group_info
        ]]>
    </select>

    <!--<select id="getMember" resultType="hashmap">
        <![CDATA[
            SELECT
                m.id, name, email, m.group_title
            FROM
                subscriber_info m
            JOIN
                group_info i
            ON
                m.group_title = i.group_title
            ORDER BY group_title
        ]]>
    </select>-->

    <select id="getMember" resultType="hashmap">
        <![CDATA[
            SELECT
                m.id, name, email, m.group_title, create_name
            FROM
                subscriber_info m
            WHERE
                create_name = #{username}
            ORDER BY group_title
        ]]>
    </select>

    <select id="memberRev" resultType="hashmap">
        <![CDATA[
            SELECT
                email, name
            FROM
                subscriber_info
            WHERE name = #{addrArr}
            AND
                create_name = #{username}
        ]]>
    </select>

    <!-- 받는사람 이름 -->
    <select id="memberRevName" resultType="hashmap">
        <![CDATA[
            SELECT
                name, email
            FROM
                subscriber_info
            WHERE
                email = #{addrArr}
            AND
                create_name = #{username}
        ]]>
    </select>

    <!-- 수신자별 전송 - 선택 조회 부분 -->
    <select id="selectGroup" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT
                m.id, name, email, m.group_title, m.create_name
            FROM
                subscriber_info m
            WHERE
                m.group_title = #{selectgroup}
            AND
                m.create_name = #{username}
            ORDER BY group_title
        ]]>
    </select>

    <!-- 그룹 선택 모달창 -->
    <select id="getGroup" resultType="hashmap">
        <![CDATA[
            SELECT
                name
            FROM
                subscriber_info
            WHERE
                group_title = #{selectgroup}
            AND
                create_name = #{username}
            ORDER BY group_title
        ]]>
    </select>

    <!-- 20210803 김영지 -->
    <select id="group_print" resultType="hashmap">
        <![CDATA[
            SELECT
                *
            FROM
                subscriber_info
            WHERE
                create_name = #{username}
        ]]>
    </select>

    <insert id="subsinsert" parameterType="com.example.demo.model.Subscriber">
        <![CDATA[
            INSERT INTO subscriber_info
            (
                name,
                email,
                group_title,
                create_name
            )
            VALUES
            (
                #{name},
                #{email},
                #{group_title},
                #{create_name}
            )
        ]]>
    </insert>

    <delete id="subsdelete" parameterType="com.example.demo.model.Subscriber">
        <![CDATA[
            DELETE

            FROM
                subscriber_info

            WHERE
                id = #{id}
        ]]>
    </delete>

    <!--<update id="subsupdate" parameterType="com.example.demo.model.Subscriber">
        <![CDATA[
            UPDATE
                subscriber_info
            SET
                name = #{name},
                email = #{email},
                group_title =  #{group_title}
            WHERE
                id=#{id}
        ]]>
    </update>-->
    <update id="subsupdate" parameterType="hashmap">
        <![CDATA[
            UPDATE
                subscriber_info
            SET
                name = #{name},
                email = #{email},
                group_title =  #{group_title}
            WHERE
                id=#{id}
        ]]>
    </update>

    <select id="getBoard" resultType="hashmap">
        <![CDATA[
            SELECT
                name, email, group_title
            FROM
                subscriber_info
            WHERE
                id=#{id}
        ]]>
    </select>

    <select id="groupmana" resultType="hashmap">
        <![CDATA[
            SELECT
                group_code, group_title
            FROM
                group_info
            WHERE
                create_name = #{username}
        ]]>
    </select>

    <insert id="groupinsert" parameterType="com.example.demo.model.Group">
        <![CDATA[
            INSERT INTO group_info
            (
                group_code,
                group_title,
                create_name
            )
            VALUES
            (
                #{group_code},
                #{group_title},
                #{create_name}
            )
        ]]>
    </insert>

    <delete id="groupdelete" parameterType="com.example.demo.model.Group">
        <![CDATA[
            DELETE

            FROM
                group_info

            WHERE
                group_code = #{group_code}
        ]]>
    </delete>

    <update id="groupupdate" parameterType="hashmap">
        <![CDATA[
            UPDATE
                group_info
            SET
                group_title = #{group_title}
            WHERE
                group_code=#{group_code}
        ]]>
    </update>

    <select id="getBoardByGroupcode" resultType="hashmap">
        <![CDATA[
            SELECT
                group_title
            FROM
                group_info
            WHERE
                group_code=#{group_code}
        ]]>
    </select>

</mapper>